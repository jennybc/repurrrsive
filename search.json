[{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jennybc.github.io/repurrrsive/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jennybc.github.io/repurrrsive/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jennifer Bryan. Author, maintainer. Charlotte Wickham. Contributor. Posit PBC. Copyright holder, funder.","code":""},{"path":"https://jennybc.github.io/repurrrsive/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryan J (2022). repurrrsive: Examples Recursive Lists Nested Split Data Frames. https://jennybc.github.io/repurrrsive/, https://github.com/jennybc/repurrrsive.","code":"@Manual{,   title = {repurrrsive: Examples of Recursive Lists and Nested or Split Data Frames},   author = {Jennifer Bryan},   year = {2022},   note = {https://jennybc.github.io/repurrrsive/, https://github.com/jennybc/repurrrsive}, }"},{"path":"https://jennybc.github.io/repurrrsive/index.html","id":"repurrrsive","dir":"","previous_headings":"","what":"Examples of Recursive Lists and Nested or Split Data Frames","title":"Examples of Recursive Lists and Nested or Split Data Frames","text":"repurrrsive package provides recursive lists handy teaching exampling functions purrr::map() rectangling functions tidyr package. datasets stored R list, JSON, XML provide full non-rectangular data experience. Enjoy! package also includes main data frame gapminder package 3 different forms: simple data frame (list-columns), data frame nested country, split named list data frames.","code":""},{"path":"https://jennybc.github.io/repurrrsive/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Examples of Recursive Lists and Nested or Split Data Frames","text":"can install repurrrsive CRAN like : GitHub :","code":"install.packages(\"repurrrsive\") # install.packages(\"devtools\") devtools::install_github(\"jennybc/repurrrsive\")"},{"path":"https://jennybc.github.io/repurrrsive/index.html","id":"recursive-list-examples","dir":"","previous_headings":"","what":"Recursive list examples","title":"Examples of Recursive Lists and Nested or Split Data Frames","text":"repurrrsive contains several datasets recursive lists, form R objects JSON /XML files. example, got_chars list information 30 point--view characters first five books Song Ice Fire series George R. R. Martin. ’s use purrr::map_chr() extract character’s names: set recursive lists article gives sense sort manipulations can demonstrated dataset(s): Game Thrones characters Data entities Star Wars universe GitHub user repo data Sharla Gelfand’s music collection Color palettes Wes Anderson movies Learn https://jennybc.github.io/repurrrsive/articles/.","code":"library(repurrrsive) library(purrr)  map_chr(got_chars, \"name\") #>  [1] \"Theon Greyjoy\"      \"Tyrion Lannister\"   \"Victarion Greyjoy\"  #>  [4] \"Will\"               \"Areo Hotah\"         \"Chett\"              #>  [7] \"Cressen\"            \"Arianne Martell\"    \"Daenerys Targaryen\" #> [10] \"Davos Seaworth\"     \"Arya Stark\"         \"Arys Oakheart\"      #> [13] \"Asha Greyjoy\"       \"Barristan Selmy\"    \"Varamyr\"            #> [16] \"Brandon Stark\"      \"Brienne of Tarth\"   \"Catelyn Stark\"      #> [19] \"Cersei Lannister\"   \"Eddard Stark\"       \"Jaime Lannister\"    #> [22] \"Jon Connington\"     \"Jon Snow\"           \"Aeron Greyjoy\"      #> [25] \"Kevan Lannister\"    \"Melisandre\"         \"Merrett Frey\"       #> [28] \"Quentyn Martell\"    \"Samwell Tarly\"      \"Sansa Stark\""},{"path":"https://jennybc.github.io/repurrrsive/index.html","id":"nested-and-split-data-frames","dir":"","previous_headings":"","what":"Nested and split data frames","title":"Examples of Recursive Lists and Nested or Split Data Frames","text":"Gapminder data, gapminder package, also various forms allow practice different styles grouped computation. example, gap_nested dataset one row per country, nested data column containing longitudinal data life expectancy, population, GDP per capita.","code":"gap_nested #> # A tibble: 142 × 3 #>    country     continent data              #>    <fct>       <fct>     <list>            #>  1 Afghanistan Asia      <tibble [12 × 4]> #>  2 Albania     Europe    <tibble [12 × 4]> #>  3 Algeria     Africa    <tibble [12 × 4]> #>  4 Angola      Africa    <tibble [12 × 4]> #>  5 Argentina   Americas  <tibble [12 × 4]> #>  6 Australia   Oceania   <tibble [12 × 4]> #>  7 Austria     Europe    <tibble [12 × 4]> #>  8 Bahrain     Asia      <tibble [12 × 4]> #>  9 Bangladesh  Asia      <tibble [12 × 4]> #> 10 Belgium     Europe    <tibble [12 × 4]> #> # … with 132 more rows"},{"path":"https://jennybc.github.io/repurrrsive/reference/discog.html","id":null,"dir":"Reference","previous_headings":"","what":"Sharla Gelfand's music collection — discog","title":"Sharla Gelfand's music collection — discog","text":"music collection, represented recursive list returned Discogs API.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/discog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sharla Gelfand's music collection — discog","text":"","code":"discog"},{"path":"https://jennybc.github.io/repurrrsive/reference/discog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sharla Gelfand's music collection — discog","text":"unnamed list 155 components, representing item Sharla's music collection.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/discog.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sharla Gelfand's music collection — discog","text":"Data retrieved 2019-07-15 https://www.discogs.com Original blog post Sharla Gelfand https://sharla.party/post/discog-purrr/","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/discog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sharla Gelfand's music collection — discog","text":"","code":"length(discog) #> [1] 155  str(discog, max.level = 2, list.len = 2) #> List of 155 #>  $ :List of 5 #>   ..$ instance_id      : int 354823933 #>   ..$ date_added       : chr \"2019-02-16T17:48:59-08:00\" #>   .. [list output truncated] #>  $ :List of 5 #>   ..$ instance_id      : int 354092601 #>   ..$ date_added       : chr \"2019-02-13T14:13:11-08:00\" #>   .. [list output truncated] #>   [list output truncated]  vapply(discog[1:6], `[[`, c(\"basic_information\", \"title\"), FUN.VALUE = \"\") #> [1] \"Demo\"                              \"Observant Com El Mon Es Destrueix\" #> [3] \"I\"                                 \"Oído Absoluto\"                     #> [5] \"A Cat's Cause, No Dogs Problem\"    \"Tashme\""},{"path":"https://jennybc.github.io/repurrrsive/reference/discog_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to Discogs data as JSON — discog_json","title":"Path to Discogs data as JSON — discog_json","text":"Path Discogs data JSON","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/discog_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to Discogs data as JSON — discog_json","text":"","code":"discog_json()"},{"path":"https://jennybc.github.io/repurrrsive/reference/discog_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to Discogs data as JSON — discog_json","text":"Local path JSON file containing Discogs data","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/discog_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to Discogs data as JSON — discog_json","text":"","code":"discog_json() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/discog.json\" if (require(\"jsonlite\")) {   d <- fromJSON(discog_json(), simplifyVector = FALSE)   identical(discog, d) } #> Loading required package: jsonlite #> [1] TRUE"},{"path":"https://jennybc.github.io/repurrrsive/reference/gap_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Gapminder data frame in various forms — gap_simple","title":"Gapminder data frame in various forms — gap_simple","text":"main data frame gapminder package three forms: gap_simple, gapminder::gapminder gap_nested, nested country continent gap_split, split country","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gap_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gapminder data frame in various forms — gap_simple","text":"","code":"gap_simple  gap_nested  gap_split"},{"path":"https://jennybc.github.io/repurrrsive/reference/gap_simple.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gapminder data frame in various forms — gap_simple","text":"object class tbl_df (inherits tbl, data.frame) 1704 rows 6 columns.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gap_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gapminder data frame in various forms — gap_simple","text":"","code":"gap_simple #> # A tibble: 1,704 × 6 #>    country     continent  year lifeExp      pop gdpPercap #>    <fct>       <fct>     <int>   <dbl>    <int>     <dbl> #>  1 Afghanistan Asia       1952    28.8  8425333      779. #>  2 Afghanistan Asia       1957    30.3  9240934      821. #>  3 Afghanistan Asia       1962    32.0 10267083      853. #>  4 Afghanistan Asia       1967    34.0 11537966      836. #>  5 Afghanistan Asia       1972    36.1 13079460      740. #>  6 Afghanistan Asia       1977    38.4 14880372      786. #>  7 Afghanistan Asia       1982    39.9 12881816      978. #>  8 Afghanistan Asia       1987    40.8 13867957      852. #>  9 Afghanistan Asia       1992    41.7 16317921      649. #> 10 Afghanistan Asia       1997    41.8 22227415      635. #> # … with 1,694 more rows gap_nested #> # A tibble: 142 × 3 #>    country     continent data              #>    <fct>       <fct>     <list>            #>  1 Afghanistan Asia      <tibble [12 × 4]> #>  2 Albania     Europe    <tibble [12 × 4]> #>  3 Algeria     Africa    <tibble [12 × 4]> #>  4 Angola      Africa    <tibble [12 × 4]> #>  5 Argentina   Americas  <tibble [12 × 4]> #>  6 Australia   Oceania   <tibble [12 × 4]> #>  7 Austria     Europe    <tibble [12 × 4]> #>  8 Bahrain     Asia      <tibble [12 × 4]> #>  9 Bangladesh  Asia      <tibble [12 × 4]> #> 10 Belgium     Europe    <tibble [12 × 4]> #> # … with 132 more rows  str(gap_split, max.level = 1, list.len = 10) #> List of 142 #>  $ Afghanistan             : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Albania                 : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Algeria                 : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Angola                  : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Argentina               : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Australia               : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Austria                 : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Bahrain                 : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Bangladesh              : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ Belgium                 : tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>   [list output truncated] str(gap_split[[1]]) #> tibble [12 × 6] (S3: tbl_df/tbl/data.frame) #>  $ country  : Factor w/ 142 levels \"Afghanistan\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ... #>  $ year     : int [1:12] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ... #>  $ lifeExp  : num [1:12] 28.8 30.3 32 34 36.1 ... #>  $ pop      : int [1:12] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ... #>  $ gdpPercap: num [1:12] 779 821 853 836 740 ..."},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"GitHub repos — gh_repos","title":"GitHub repos — gh_repos","text":"Info GitHub repos, retrieved GitHub API.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GitHub repos — gh_repos","text":"","code":"gh_repos"},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_repos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GitHub repos — gh_repos","text":"unnamed list 6 components, list 30 repos specific GitHub user. repo's component list length >60, containing information name, owner (list), fork status, creation date.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_repos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GitHub repos — gh_repos","text":"https://developer.github.com/v3/repos/#list-user-repositories","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_repos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GitHub repos — gh_repos","text":"","code":"str(gh_repos, max.level = 1) #> List of 6 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 26 #>  $ :List of 30 #>  $ :List of 30 str(gh_repos[[1]], max.level = 1) #> List of 30 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 #>  $ :List of 68 str(gh_repos[[1]][[1]]) #> List of 68 #>  $ id               : int 61160198 #>  $ name             : chr \"after\" #>  $ full_name        : chr \"gaborcsardi/after\" #>  $ owner            :List of 17 #>   ..$ login              : chr \"gaborcsardi\" #>   ..$ id                 : int 660288 #>   ..$ avatar_url         : chr \"https://avatars.githubusercontent.com/u/660288?v=3\" #>   ..$ gravatar_id        : chr \"\" #>   ..$ url                : chr \"https://api.github.com/users/gaborcsardi\" #>   ..$ html_url           : chr \"https://github.com/gaborcsardi\" #>   ..$ followers_url      : chr \"https://api.github.com/users/gaborcsardi/followers\" #>   ..$ following_url      : chr \"https://api.github.com/users/gaborcsardi/following{/other_user}\" #>   ..$ gists_url          : chr \"https://api.github.com/users/gaborcsardi/gists{/gist_id}\" #>   ..$ starred_url        : chr \"https://api.github.com/users/gaborcsardi/starred{/owner}{/repo}\" #>   ..$ subscriptions_url  : chr \"https://api.github.com/users/gaborcsardi/subscriptions\" #>   ..$ organizations_url  : chr \"https://api.github.com/users/gaborcsardi/orgs\" #>   ..$ repos_url          : chr \"https://api.github.com/users/gaborcsardi/repos\" #>   ..$ events_url         : chr \"https://api.github.com/users/gaborcsardi/events{/privacy}\" #>   ..$ received_events_url: chr \"https://api.github.com/users/gaborcsardi/received_events\" #>   ..$ type               : chr \"User\" #>   ..$ site_admin         : logi FALSE #>  $ private          : logi FALSE #>  $ html_url         : chr \"https://github.com/gaborcsardi/after\" #>  $ description      : chr \"Run Code in the Background\" #>  $ fork             : logi FALSE #>  $ url              : chr \"https://api.github.com/repos/gaborcsardi/after\" #>  $ forks_url        : chr \"https://api.github.com/repos/gaborcsardi/after/forks\" #>  $ keys_url         : chr \"https://api.github.com/repos/gaborcsardi/after/keys{/key_id}\" #>  $ collaborators_url: chr \"https://api.github.com/repos/gaborcsardi/after/collaborators{/collaborator}\" #>  $ teams_url        : chr \"https://api.github.com/repos/gaborcsardi/after/teams\" #>  $ hooks_url        : chr \"https://api.github.com/repos/gaborcsardi/after/hooks\" #>  $ issue_events_url : chr \"https://api.github.com/repos/gaborcsardi/after/issues/events{/number}\" #>  $ events_url       : chr \"https://api.github.com/repos/gaborcsardi/after/events\" #>  $ assignees_url    : chr \"https://api.github.com/repos/gaborcsardi/after/assignees{/user}\" #>  $ branches_url     : chr \"https://api.github.com/repos/gaborcsardi/after/branches{/branch}\" #>  $ tags_url         : chr \"https://api.github.com/repos/gaborcsardi/after/tags\" #>  $ blobs_url        : chr \"https://api.github.com/repos/gaborcsardi/after/git/blobs{/sha}\" #>  $ git_tags_url     : chr \"https://api.github.com/repos/gaborcsardi/after/git/tags{/sha}\" #>  $ git_refs_url     : chr \"https://api.github.com/repos/gaborcsardi/after/git/refs{/sha}\" #>  $ trees_url        : chr \"https://api.github.com/repos/gaborcsardi/after/git/trees{/sha}\" #>  $ statuses_url     : chr \"https://api.github.com/repos/gaborcsardi/after/statuses/{sha}\" #>  $ languages_url    : chr \"https://api.github.com/repos/gaborcsardi/after/languages\" #>  $ stargazers_url   : chr \"https://api.github.com/repos/gaborcsardi/after/stargazers\" #>  $ contributors_url : chr \"https://api.github.com/repos/gaborcsardi/after/contributors\" #>  $ subscribers_url  : chr \"https://api.github.com/repos/gaborcsardi/after/subscribers\" #>  $ subscription_url : chr \"https://api.github.com/repos/gaborcsardi/after/subscription\" #>  $ commits_url      : chr \"https://api.github.com/repos/gaborcsardi/after/commits{/sha}\" #>  $ git_commits_url  : chr \"https://api.github.com/repos/gaborcsardi/after/git/commits{/sha}\" #>  $ comments_url     : chr \"https://api.github.com/repos/gaborcsardi/after/comments{/number}\" #>  $ issue_comment_url: chr \"https://api.github.com/repos/gaborcsardi/after/issues/comments{/number}\" #>  $ contents_url     : chr \"https://api.github.com/repos/gaborcsardi/after/contents/{+path}\" #>  $ compare_url      : chr \"https://api.github.com/repos/gaborcsardi/after/compare/{base}...{head}\" #>  $ merges_url       : chr \"https://api.github.com/repos/gaborcsardi/after/merges\" #>  $ archive_url      : chr \"https://api.github.com/repos/gaborcsardi/after/{archive_format}{/ref}\" #>  $ downloads_url    : chr \"https://api.github.com/repos/gaborcsardi/after/downloads\" #>  $ issues_url       : chr \"https://api.github.com/repos/gaborcsardi/after/issues{/number}\" #>  $ pulls_url        : chr \"https://api.github.com/repos/gaborcsardi/after/pulls{/number}\" #>  $ milestones_url   : chr \"https://api.github.com/repos/gaborcsardi/after/milestones{/number}\" #>  $ notifications_url: chr \"https://api.github.com/repos/gaborcsardi/after/notifications{?since,all,participating}\" #>  $ labels_url       : chr \"https://api.github.com/repos/gaborcsardi/after/labels{/name}\" #>  $ releases_url     : chr \"https://api.github.com/repos/gaborcsardi/after/releases{/id}\" #>  $ deployments_url  : chr \"https://api.github.com/repos/gaborcsardi/after/deployments\" #>  $ created_at       : chr \"2016-06-14T22:33:49Z\" #>  $ updated_at       : chr \"2016-07-21T17:42:35Z\" #>  $ pushed_at        : chr \"2016-07-09T16:13:42Z\" #>  $ git_url          : chr \"git://github.com/gaborcsardi/after.git\" #>  $ ssh_url          : chr \"git@github.com:gaborcsardi/after.git\" #>  $ clone_url        : chr \"https://github.com/gaborcsardi/after.git\" #>  $ svn_url          : chr \"https://github.com/gaborcsardi/after\" #>  $ homepage         : NULL #>  $ size             : int 15 #>  $ stargazers_count : int 5 #>  $ watchers_count   : int 5 #>  $ language         : chr \"R\" #>  $ has_issues       : logi TRUE #>  $ has_downloads    : logi TRUE #>  $ has_wiki         : logi TRUE #>  $ has_pages        : logi FALSE #>  $ forks_count      : int 0 #>  $ mirror_url       : NULL #>  $ open_issues_count: int 0 #>  $ forks            : int 0 #>  $ open_issues      : int 0 #>  $ watchers         : int 5 #>  $ default_branch   : chr \"master\"  str(lapply(gh_repos[[1]][1:3], `[`, c(\"full_name\", \"created_at\"))) #> List of 3 #>  $ :List of 2 #>   ..$ full_name : chr \"gaborcsardi/after\" #>   ..$ created_at: chr \"2016-06-14T22:33:49Z\" #>  $ :List of 2 #>   ..$ full_name : chr \"gaborcsardi/argufy\" #>   ..$ created_at: chr \"2015-08-10T18:56:23Z\" #>  $ :List of 2 #>   ..$ full_name : chr \"gaborcsardi/ask\" #>   ..$ created_at: chr \"2015-05-28T14:04:57Z\""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users.html","id":null,"dir":"Reference","previous_headings":"","what":"GitHub users — gh_users","title":"GitHub users — gh_users","text":"Info GitHub users, retrieved GitHub API.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GitHub users — gh_users","text":"","code":"gh_users"},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GitHub users — gh_users","text":"unnamed list 6 components, representing GitHub user. user's component list length 30, containing information username, GitHub id, join date.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GitHub users — gh_users","text":"https://developer.github.com/v3/users/#get--single-user","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GitHub users — gh_users","text":"","code":"str(gh_users, max.level = 1) #> List of 6 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 30 #>  $ :List of 30 str(gh_users[[1]]) #> List of 30 #>  $ login              : chr \"gaborcsardi\" #>  $ id                 : int 660288 #>  $ avatar_url         : chr \"https://avatars.githubusercontent.com/u/660288?v=3\" #>  $ gravatar_id        : chr \"\" #>  $ url                : chr \"https://api.github.com/users/gaborcsardi\" #>  $ html_url           : chr \"https://github.com/gaborcsardi\" #>  $ followers_url      : chr \"https://api.github.com/users/gaborcsardi/followers\" #>  $ following_url      : chr \"https://api.github.com/users/gaborcsardi/following{/other_user}\" #>  $ gists_url          : chr \"https://api.github.com/users/gaborcsardi/gists{/gist_id}\" #>  $ starred_url        : chr \"https://api.github.com/users/gaborcsardi/starred{/owner}{/repo}\" #>  $ subscriptions_url  : chr \"https://api.github.com/users/gaborcsardi/subscriptions\" #>  $ organizations_url  : chr \"https://api.github.com/users/gaborcsardi/orgs\" #>  $ repos_url          : chr \"https://api.github.com/users/gaborcsardi/repos\" #>  $ events_url         : chr \"https://api.github.com/users/gaborcsardi/events{/privacy}\" #>  $ received_events_url: chr \"https://api.github.com/users/gaborcsardi/received_events\" #>  $ type               : chr \"User\" #>  $ site_admin         : logi FALSE #>  $ name               : chr \"Gábor Csárdi\" #>  $ company            : chr \"Mango Solutions, @MangoTheCat \" #>  $ blog               : chr \"http://gaborcsardi.org\" #>  $ location           : chr \"Chippenham, UK\" #>  $ email              : chr \"csardi.gabor@gmail.com\" #>  $ hireable           : NULL #>  $ bio                : NULL #>  $ public_repos       : int 52 #>  $ public_gists       : int 6 #>  $ followers          : int 303 #>  $ following          : int 22 #>  $ created_at         : chr \"2011-03-09T17:29:25Z\" #>  $ updated_at         : chr \"2016-10-11T11:05:06Z\"  str(lapply(gh_users, `[`, c(\"login\", \"name\"))) #> List of 6 #>  $ :List of 2 #>   ..$ login: chr \"gaborcsardi\" #>   ..$ name : chr \"Gábor Csárdi\" #>  $ :List of 2 #>   ..$ login: chr \"jennybc\" #>   ..$ name : chr \"Jennifer (Jenny) Bryan\" #>  $ :List of 2 #>   ..$ login: chr \"jtleek\" #>   ..$ name : chr \"Jeff L.\" #>  $ :List of 2 #>   ..$ login: chr \"juliasilge\" #>   ..$ name : chr \"Julia Silge\" #>  $ :List of 2 #>   ..$ login: chr \"leeper\" #>   ..$ name : chr \"Thomas J. Leeper\" #>  $ :List of 2 #>   ..$ login: chr \"masalmon\" #>   ..$ name : chr \"Maëlle Salmon\""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Paths to GitHub data as JSON and XML — gh_users_json","title":"Paths to GitHub data as JSON and XML — gh_users_json","text":"Paths GitHub data JSON XML","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paths to GitHub data as JSON and XML — gh_users_json","text":"","code":"gh_users_json()  gh_repos_json()  gh_users_xml()  gh_repos_xml()"},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paths to GitHub data as JSON and XML — gh_users_json","text":"Local path JSON XML file containing GitHub data","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/gh_users_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paths to GitHub data as JSON and XML — gh_users_json","text":"","code":"gh_users_json() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/gh_users.json\" if (require(\"jsonlite\")) {   ghuj <- fromJSON(gh_users_json(), simplifyDataFrame = FALSE)   identical(gh_users, ghuj) } #> [1] TRUE gh_repos_json() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/gh_repos.json\" if (require(\"jsonlite\")) {   ghrj <- fromJSON(gh_repos_json(), simplifyDataFrame = FALSE)   identical(gh_repos, ghrj) } #> [1] TRUE gh_users_xml() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/gh_users.xml\" if (require(\"xml2\")) {   xml <- read_xml(gh_users_xml())   xml } #> Loading required package: xml2 #> {xml_document} #> <root> #> [1] <elem>\\n  <login>gaborcsardi<\/login>\\n  <id>660288<\/id>\\n  <avatar_url>ht ... #> [2] <elem>\\n  <login>jennybc<\/login>\\n  <id>599454<\/id>\\n  <avatar_url>https: ... #> [3] <elem>\\n  <login>jtleek<\/login>\\n  <id>1571674<\/id>\\n  <avatar_url>https: ... #> [4] <elem>\\n  <login>juliasilge<\/login>\\n  <id>12505835<\/id>\\n  <avatar_url>h ... #> [5] <elem>\\n  <login>leeper<\/login>\\n  <id>3505428<\/id>\\n  <avatar_url>https: ... #> [6] <elem>\\n  <login>masalmon<\/login>\\n  <id>8360597<\/id>\\n  <avatar_url>http ... gh_repos_xml() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/gh_repos.xml\" if (require(\"xml2\")) {   xml <- read_xml(gh_repos_xml())   xml } #> {xml_document} #> <root> #> [1] <elem>\\n  <elem>\\n    <id>61160198<\/id>\\n    <name>after<\/name>\\n    <ful ... #> [2] <elem>\\n  <elem>\\n    <id>14756210<\/id>\\n    <name>2013-11_sfu<\/name>\\n   ... #> [3] <elem>\\n  <elem>\\n    <id>41645119<\/id>\\n    <name>advdatasci<\/name>\\n    ... #> [4] <elem>\\n  <elem>\\n    <id>56019902<\/id>\\n    <name>2016-14<\/name>\\n    <f ... #> [5] <elem>\\n  <elem>\\n    <id>17120350<\/id>\\n    <name>ampolcourse<\/name>\\n   ... #> [6] <elem>\\n  <elem>\\n    <id>57878579<\/id>\\n    <name>aqi_pdf<\/name>\\n    <f ..."},{"path":"https://jennybc.github.io/repurrrsive/reference/gmaps_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocoded cities from Google Maps — gmaps_cities","title":"Geocoded cities from Google Maps — gmaps_cities","text":"tibble contains results geocoding five cities (\"Houston\", \"Washington\", \"New York\", \"Chicago\", \"Arlington\") using Google Maps API 2022-06-08. Two cities, Washington Arlington, deliberately picked ambiguity: Washington refer city state, Arlington mean one Virginia one Texas.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gmaps_cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocoded cities from Google Maps — gmaps_cities","text":"","code":"gmaps_cities"},{"path":"https://jennybc.github.io/repurrrsive/reference/gmaps_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geocoded cities from Google Maps — gmaps_cities","text":"tibble 5 rows two columns. city gives original search term json gives returned JSON converted list.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gmaps_cities.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geocoded cities from Google Maps — gmaps_cities","text":"https://developers.google.com/maps/documentation/geocoding","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/gmaps_cities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocoded cities from Google Maps — gmaps_cities","text":"","code":"gmaps_cities #> # A tibble: 5 × 2 #>   city       json             #>   <chr>      <list>           #> 1 Houston    <named list [2]> #> 2 Washington <named list [2]> #> 3 New York   <named list [2]> #> 4 Chicago    <named list [2]> #> 5 Arlington  <named list [2]>"},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Game of Thrones POV characters — got_chars","title":"Game of Thrones POV characters — got_chars","text":"Info point--view (POV) characters first five books Song Ice Fire series George R. R. Martin. Retrieved API Ice Fire.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Game of Thrones POV characters — got_chars","text":"","code":"got_chars"},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Game of Thrones POV characters — got_chars","text":"unnamed list 30 components, representing POV character. character's component named list length 18, containing information name, aliases, house allegiances.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Game of Thrones POV characters — got_chars","text":"https://anapioficeandfire.com","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Game of Thrones POV characters — got_chars","text":"","code":"str(got_chars, max.level = 1, list.len = 10) #> List of 30 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>  $ :List of 18 #>   [list output truncated] str(got_chars[[1]]) #> List of 18 #>  $ url        : chr \"https://www.anapioficeandfire.com/api/characters/1022\" #>  $ id         : int 1022 #>  $ name       : chr \"Theon Greyjoy\" #>  $ gender     : chr \"Male\" #>  $ culture    : chr \"Ironborn\" #>  $ born       : chr \"In 278 AC or 279 AC, at Pyke\" #>  $ died       : chr \"\" #>  $ alive      : logi TRUE #>  $ titles     : chr [1:2] \"Prince of Winterfell\" \"Lord of the Iron Islands (by law of the green lands)\" #>  $ aliases    : chr [1:4] \"Prince of Fools\" \"Theon Turncloak\" \"Reek\" \"Theon Kinslayer\" #>  $ father     : chr \"\" #>  $ mother     : chr \"\" #>  $ spouse     : chr \"\" #>  $ allegiances: chr \"House Greyjoy of Pyke\" #>  $ books      : chr [1:3] \"A Game of Thrones\" \"A Storm of Swords\" \"A Feast for Crows\" #>  $ povBooks   : chr [1:2] \"A Clash of Kings\" \"A Dance with Dragons\" #>  $ tvSeries   : chr [1:6] \"Season 1\" \"Season 2\" \"Season 3\" \"Season 4\" ... #>  $ playedBy   : chr \"Alfie Allen\" str(lapply(got_chars, `[`, c(\"name\", \"culture\"))) #> List of 30 #>  $ :List of 2 #>   ..$ name   : chr \"Theon Greyjoy\" #>   ..$ culture: chr \"Ironborn\" #>  $ :List of 2 #>   ..$ name   : chr \"Tyrion Lannister\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Victarion Greyjoy\" #>   ..$ culture: chr \"Ironborn\" #>  $ :List of 2 #>   ..$ name   : chr \"Will\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Areo Hotah\" #>   ..$ culture: chr \"Norvoshi\" #>  $ :List of 2 #>   ..$ name   : chr \"Chett\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Cressen\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Arianne Martell\" #>   ..$ culture: chr \"Dornish\" #>  $ :List of 2 #>   ..$ name   : chr \"Daenerys Targaryen\" #>   ..$ culture: chr \"Valyrian\" #>  $ :List of 2 #>   ..$ name   : chr \"Davos Seaworth\" #>   ..$ culture: chr \"Westeros\" #>  $ :List of 2 #>   ..$ name   : chr \"Arya Stark\" #>   ..$ culture: chr \"Northmen\" #>  $ :List of 2 #>   ..$ name   : chr \"Arys Oakheart\" #>   ..$ culture: chr \"Reach\" #>  $ :List of 2 #>   ..$ name   : chr \"Asha Greyjoy\" #>   ..$ culture: chr \"Ironborn\" #>  $ :List of 2 #>   ..$ name   : chr \"Barristan Selmy\" #>   ..$ culture: chr \"Westeros\" #>  $ :List of 2 #>   ..$ name   : chr \"Varamyr\" #>   ..$ culture: chr \"Free Folk\" #>  $ :List of 2 #>   ..$ name   : chr \"Brandon Stark\" #>   ..$ culture: chr \"Northmen\" #>  $ :List of 2 #>   ..$ name   : chr \"Brienne of Tarth\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Catelyn Stark\" #>   ..$ culture: chr \"Rivermen\" #>  $ :List of 2 #>   ..$ name   : chr \"Cersei Lannister\" #>   ..$ culture: chr \"Westerman\" #>  $ :List of 2 #>   ..$ name   : chr \"Eddard Stark\" #>   ..$ culture: chr \"Northmen\" #>  $ :List of 2 #>   ..$ name   : chr \"Jaime Lannister\" #>   ..$ culture: chr \"Westerlands\" #>  $ :List of 2 #>   ..$ name   : chr \"Jon Connington\" #>   ..$ culture: chr \"Stormlands\" #>  $ :List of 2 #>   ..$ name   : chr \"Jon Snow\" #>   ..$ culture: chr \"Northmen\" #>  $ :List of 2 #>   ..$ name   : chr \"Aeron Greyjoy\" #>   ..$ culture: chr \"Ironborn\" #>  $ :List of 2 #>   ..$ name   : chr \"Kevan Lannister\" #>   ..$ culture: chr \"\" #>  $ :List of 2 #>   ..$ name   : chr \"Melisandre\" #>   ..$ culture: chr \"Asshai\" #>  $ :List of 2 #>   ..$ name   : chr \"Merrett Frey\" #>   ..$ culture: chr \"Rivermen\" #>  $ :List of 2 #>   ..$ name   : chr \"Quentyn Martell\" #>   ..$ culture: chr \"Dornish\" #>  $ :List of 2 #>   ..$ name   : chr \"Samwell Tarly\" #>   ..$ culture: chr \"Andal\" #>  $ :List of 2 #>   ..$ name   : chr \"Sansa Stark\" #>   ..$ culture: chr \"Northmen\""},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Paths to Game of Thrones data as JSON and XML — got_chars_json","title":"Paths to Game of Thrones data as JSON and XML — got_chars_json","text":"Paths Game Thrones data JSON XML","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paths to Game of Thrones data as JSON and XML — got_chars_json","text":"","code":"got_chars_json()  got_chars_xml()"},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paths to Game of Thrones data as JSON and XML — got_chars_json","text":"Local path JSON XML file containing Game Thrones data","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/got_chars_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paths to Game of Thrones data as JSON and XML — got_chars_json","text":"","code":"got_chars_json() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/got_chars.json\" if (require(\"jsonlite\")) {   gotcj <- fromJSON(got_chars_json(), simplifyDataFrame = FALSE)   identical(got_chars, gotcj) } #> [1] TRUE got_chars_xml() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/got_chars.xml\" if (require(\"xml2\")) {   xml <- read_xml(got_chars_xml())   xml } #> {xml_document} #> <root> #>  [1] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1022<\/ur ... #>  [2] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1052<\/ur ... #>  [3] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1074<\/ur ... #>  [4] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1109<\/ur ... #>  [5] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1166<\/ur ... #>  [6] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1267<\/ur ... #>  [7] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1295<\/ur ... #>  [8] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/130<\/url ... #>  [9] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1303<\/ur ... #> [10] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/1319<\/ur ... #> [11] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/148<\/url ... #> [12] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/149<\/url ... #> [13] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/150<\/url ... #> [14] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/168<\/url ... #> [15] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/2066<\/ur ... #> [16] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/208<\/url ... #> [17] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/216<\/url ... #> [18] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/232<\/url ... #> [19] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/238<\/url ... #> [20] <elem>\\n  <url>https://www.anapioficeandfire.com/api/characters/339<\/url ... #> ..."},{"path":"https://jennybc.github.io/repurrrsive/reference/repurrrsive-package.html","id":null,"dir":"Reference","previous_headings":"","what":"repurrrsive: Examples of Recursive Lists and Nested or Split Data Frames — repurrrsive-package","title":"repurrrsive: Examples of Recursive Lists and Nested or Split Data Frames — repurrrsive-package","text":"Recursive lists form R objects, 'JSON', 'XML', use teaching examples. Examples include color palettes, Game Thrones characters, 'GitHub' users repositories, music collections, entities Star Wars universe. Data 'gapminder' package also included, simple data frame nested split forms.","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/repurrrsive-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"repurrrsive: Examples of Recursive Lists and Nested or Split Data Frames — repurrrsive-package","text":"Maintainer: Jennifer Bryan jenny@rstudio.com (ORCID) contributors: Charlotte Wickham cwickham@gmail.com [contributor] Posit PBC [copyright holder, funder]","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":null,"dir":"Reference","previous_headings":"","what":"Entities from the Star Wars Universe — sw_people","title":"Entities from the Star Wars Universe — sw_people","text":"Data retrieved swapi API Star Wars Universe.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entities from the Star Wars Universe — sw_people","text":"","code":"sw_people  sw_films  sw_planets  sw_species  sw_vehicles  sw_starships"},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Entities from the Star Wars Universe — sw_people","text":"Unnamed lists varying number components.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Entities from the Star Wars Universe — sw_people","text":"Data originally obtained http://swapi.co/ using rwars package: https://github.com/Ironholds/rwars. Star Wars API appears moved https://pipedream.com/apps/swapi since time.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Entities from the Star Wars Universe — sw_people","text":"sw_people List individual people characters within Star Wars universe. sw_starships List transport crafts hyperdrive capability. sw_vehicles List transport crafts without hyperdrive capability. sw_films List Star Wars films. sw_species List types people characters within Star Wars Universe. sw_planets List large masses, planets planetoids Star Wars Universe, time 0 ABY.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/sw_people.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Entities from the Star Wars Universe — sw_people","text":"","code":"# sw_people str(sw_people, max.level = 1) #> List of 87 #>  $ :List of 16 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 16 #>  $ :List of 16 #>  $ :List of 14 #>  $ :List of 16 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 16 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 13 #>  $ :List of 14 #>  $ :List of 16 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 13 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 16 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 13 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 15 #>  $ :List of 14 #>  $ :List of 13 #>  $ :List of 15 str(sw_people[[1]]) #> List of 16 #>  $ name      : chr \"Luke Skywalker\" #>  $ height    : chr \"172\" #>  $ mass      : chr \"77\" #>  $ hair_color: chr \"blond\" #>  $ skin_color: chr \"fair\" #>  $ eye_color : chr \"blue\" #>  $ birth_year: chr \"19BBY\" #>  $ gender    : chr \"male\" #>  $ homeworld : chr \"http://swapi.co/api/planets/1/\" #>  $ films     : chr [1:5] \"http://swapi.co/api/films/6/\" \"http://swapi.co/api/films/3/\" \"http://swapi.co/api/films/2/\" \"http://swapi.co/api/films/1/\" ... #>  $ species   : chr \"http://swapi.co/api/species/1/\" #>  $ vehicles  : chr [1:2] \"http://swapi.co/api/vehicles/14/\" \"http://swapi.co/api/vehicles/30/\" #>  $ starships : chr [1:2] \"http://swapi.co/api/starships/12/\" \"http://swapi.co/api/starships/22/\" #>  $ created   : chr \"2014-12-09T13:50:51.644000Z\" #>  $ edited    : chr \"2014-12-20T21:17:56.891000Z\" #>  $ url       : chr \"http://swapi.co/api/people/1/\" sapply(sw_people, `[[`, \"name\") #>  [1] \"Luke Skywalker\"        \"C-3PO\"                 \"R2-D2\"                 #>  [4] \"Darth Vader\"           \"Leia Organa\"           \"Owen Lars\"             #>  [7] \"Beru Whitesun lars\"    \"R5-D4\"                 \"Biggs Darklighter\"     #> [10] \"Obi-Wan Kenobi\"        \"Anakin Skywalker\"      \"Wilhuff Tarkin\"        #> [13] \"Chewbacca\"             \"Han Solo\"              \"Greedo\"                #> [16] \"Jabba Desilijic Tiure\" \"Wedge Antilles\"        \"Jek Tono Porkins\"      #> [19] \"Yoda\"                  \"Palpatine\"             \"Boba Fett\"             #> [22] \"IG-88\"                 \"Bossk\"                 \"Lando Calrissian\"      #> [25] \"Lobot\"                 \"Ackbar\"                \"Mon Mothma\"            #> [28] \"Arvel Crynyd\"          \"Wicket Systri Warrick\" \"Nien Nunb\"             #> [31] \"Qui-Gon Jinn\"          \"Nute Gunray\"           \"Finis Valorum\"         #> [34] \"Jar Jar Binks\"         \"Roos Tarpals\"          \"Rugor Nass\"            #> [37] \"Ric Olié\"              \"Watto\"                 \"Sebulba\"               #> [40] \"Quarsh Panaka\"         \"Shmi Skywalker\"        \"Darth Maul\"            #> [43] \"Bib Fortuna\"           \"Ayla Secura\"           \"Dud Bolt\"              #> [46] \"Gasgano\"               \"Ben Quadinaros\"        \"Mace Windu\"            #> [49] \"Ki-Adi-Mundi\"          \"Kit Fisto\"             \"Eeth Koth\"             #> [52] \"Adi Gallia\"            \"Saesee Tiin\"           \"Yarael Poof\"           #> [55] \"Plo Koon\"              \"Mas Amedda\"            \"Gregar Typho\"          #> [58] \"Cordé\"                 \"Cliegg Lars\"           \"Poggle the Lesser\"     #> [61] \"Luminara Unduli\"       \"Barriss Offee\"         \"Dormé\"                 #> [64] \"Dooku\"                 \"Bail Prestor Organa\"   \"Jango Fett\"            #> [67] \"Zam Wesell\"            \"Dexter Jettster\"       \"Lama Su\"               #> [70] \"Taun We\"               \"Jocasta Nu\"            \"Ratts Tyerell\"         #> [73] \"R4-P17\"                \"Wat Tambor\"            \"San Hill\"              #> [76] \"Shaak Ti\"              \"Grievous\"              \"Tarfful\"               #> [79] \"Raymus Antilles\"       \"Sly Moore\"             \"Tion Medon\"            #> [82] \"Finn\"                  \"Rey\"                   \"Poe Dameron\"           #> [85] \"BB8\"                   \"Captain Phasma\"        \"Padmé Amidala\"          # sw_films str(sw_films, max.level = 1) #> List of 7 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 14 #>  $ :List of 13 str(sw_films[[1]]) #> List of 14 #>  $ title        : chr \"A New Hope\" #>  $ episode_id   : int 4 #>  $ opening_crawl: chr \"It is a period of civil war.\\r\\nRebel spaceships, striking\\r\\nfrom a hidden base, have won\\r\\ntheir first victo\"| __truncated__ #>  $ director     : chr \"George Lucas\" #>  $ producer     : chr \"Gary Kurtz, Rick McCallum\" #>  $ release_date : chr \"1977-05-25\" #>  $ characters   : chr [1:18] \"http://swapi.co/api/people/1/\" \"http://swapi.co/api/people/2/\" \"http://swapi.co/api/people/3/\" \"http://swapi.co/api/people/4/\" ... #>  $ planets      : chr [1:3] \"http://swapi.co/api/planets/2/\" \"http://swapi.co/api/planets/3/\" \"http://swapi.co/api/planets/1/\" #>  $ starships    : chr [1:8] \"http://swapi.co/api/starships/2/\" \"http://swapi.co/api/starships/3/\" \"http://swapi.co/api/starships/5/\" \"http://swapi.co/api/starships/9/\" ... #>  $ vehicles     : chr [1:4] \"http://swapi.co/api/vehicles/4/\" \"http://swapi.co/api/vehicles/6/\" \"http://swapi.co/api/vehicles/7/\" \"http://swapi.co/api/vehicles/8/\" #>  $ species      : chr [1:5] \"http://swapi.co/api/species/5/\" \"http://swapi.co/api/species/3/\" \"http://swapi.co/api/species/2/\" \"http://swapi.co/api/species/1/\" ... #>  $ created      : chr \"2014-12-10T14:23:31.880000Z\" #>  $ edited       : chr \"2015-04-11T09:46:52.774897Z\" #>  $ url          : chr \"http://swapi.co/api/films/1/\" sapply(sw_films, `[[`, \"title\") #> [1] \"A New Hope\"              \"Attack of the Clones\"    #> [3] \"The Phantom Menace\"      \"Revenge of the Sith\"     #> [5] \"Return of the Jedi\"      \"The Empire Strikes Back\" #> [7] \"The Force Awakens\""},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palettes from Wes Anderson movies — wesanderson","title":"Color palettes from Wes Anderson movies — wesanderson","text":"list color palettes inspired Wes Anderson movies, taken wesanderson package.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palettes from Wes Anderson movies — wesanderson","text":"","code":"wesanderson"},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color palettes from Wes Anderson movies — wesanderson","text":"named list 15 components, containing color palette specific movie. palette consists 4 5 hexadecimal color values.","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Color palettes from Wes Anderson movies — wesanderson","text":"https://cran.r-project.org/package=wesanderson http://wesandersonpalettes.tumblr.com","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palettes from Wes Anderson movies — wesanderson","text":"","code":"str(wesanderson) #> List of 15 #>  $ GrandBudapest : chr [1:4] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\" #>  $ Moonrise1     : chr [1:4] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\" #>  $ Royal1        : chr [1:4] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\" #>  $ Moonrise2     : chr [1:4] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\" #>  $ Cavalcanti    : chr [1:5] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" ... #>  $ Royal2        : chr [1:5] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" ... #>  $ GrandBudapest2: chr [1:4] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\" #>  $ Moonrise3     : chr [1:5] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" ... #>  $ Chevalier     : chr [1:4] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\" #>  $ Zissou        : chr [1:5] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" ... #>  $ FantasticFox  : chr [1:5] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" ... #>  $ Darjeeling    : chr [1:5] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" ... #>  $ Rushmore      : chr [1:5] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" ... #>  $ BottleRocket  : chr [1:7] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" ... #>  $ Darjeeling2   : chr [1:5] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" ..."},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to wesanderson JSON and XML — wesanderson_json","title":"Path to wesanderson JSON and XML — wesanderson_json","text":"Path wesanderson JSON XML","code":""},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to wesanderson JSON and XML — wesanderson_json","text":"","code":"wesanderson_json()  wesanderson_xml()"},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to wesanderson JSON and XML — wesanderson_json","text":"Local path JSON XML file containing Wes Anderson color palettes","code":""},{"path":[]},{"path":"https://jennybc.github.io/repurrrsive/reference/wesanderson_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to wesanderson JSON and XML — wesanderson_json","text":"","code":"wesanderson_json() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/wesanderson.json\" if (require(\"jsonlite\")) {   jsonlite::fromJSON(wesanderson_json()) } #> $wesanderson #> $wesanderson$GrandBudapest #> [1] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\" #>  #> $wesanderson$Moonrise1 #> [1] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\" #>  #> $wesanderson$Royal1 #> [1] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\" #>  #> $wesanderson$Moonrise2 #> [1] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\" #>  #> $wesanderson$Cavalcanti #> [1] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" \"#972D15\" #>  #> $wesanderson$Royal2 #> [1] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" \"#74A089\" #>  #> $wesanderson$GrandBudapest2 #> [1] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\" #>  #> $wesanderson$Moonrise3 #> [1] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" \"#FAD77B\" #>  #> $wesanderson$Chevalier #> [1] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\" #>  #> $wesanderson$Zissou #> [1] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" \"#F21A00\" #>  #> $wesanderson$FantasticFox #> [1] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" \"#B40F20\" #>  #> $wesanderson$Darjeeling #> [1] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" \"#5BBCD6\" #>  #> $wesanderson$Rushmore #> [1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\" #>  #> $wesanderson$BottleRocket #> [1] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" \"#4E2A1E\" \"#550307\" \"#0C1707\" #>  #> $wesanderson$Darjeeling2 #> [1] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" \"#000000\" #>  #>  wesanderson_xml() #> [1] \"/home/runner/work/_temp/Library/repurrrsive/extdata/wesanderson.xml\" if (require(\"xml2\")) {   xml2::read_xml(wesanderson_xml()) } #> {xml_document} #> <package name=\"wesanderson\"> #>  [1] <palette name=\"GrandBudapest\">\\n  <hex>#F1BB7B<\/hex>\\n  <hex>#FD6467<\/he ... #>  [2] <palette name=\"Moonrise1\">\\n  <hex>#F3DF6C<\/hex>\\n  <hex>#CEAB07<\/hex>\\n ... #>  [3] <palette name=\"Royal1\">\\n  <hex>#899DA4<\/hex>\\n  <hex>#C93312<\/hex>\\n  < ... #>  [4] <palette name=\"Moonrise2\">\\n  <hex>#798E87<\/hex>\\n  <hex>#C27D38<\/hex>\\n ... #>  [5] <palette name=\"Cavalcanti\">\\n  <hex>#D8B70A<\/hex>\\n  <hex>#02401B<\/hex>\\ ... #>  [6] <palette name=\"Royal2\">\\n  <hex>#9A8822<\/hex>\\n  <hex>#F5CDB4<\/hex>\\n  < ... #>  [7] <palette name=\"GrandBudapest2\">\\n  <hex>#E6A0C4<\/hex>\\n  <hex>#C6CDF7<\/h ... #>  [8] <palette name=\"Moonrise3\">\\n  <hex>#85D4E3<\/hex>\\n  <hex>#F4B5BD<\/hex>\\n ... #>  [9] <palette name=\"Chevalier\">\\n  <hex>#446455<\/hex>\\n  <hex>#FDD262<\/hex>\\n ... #> [10] <palette name=\"Zissou\">\\n  <hex>#3B9AB2<\/hex>\\n  <hex>#78B7C5<\/hex>\\n  < ... #> [11] <palette name=\"FantasticFox\">\\n  <hex>#DD8D29<\/hex>\\n  <hex>#E2D200<\/hex ... #> [12] <palette name=\"Darjeeling\">\\n  <hex>#FF0000<\/hex>\\n  <hex>#00A08A<\/hex>\\ ... #> [13] <palette name=\"Rushmore\">\\n  <hex>#E1BD6D<\/hex>\\n  <hex>#EABE94<\/hex>\\n  ... #> [14] <palette name=\"BottleRocket\">\\n  <hex>#A42820<\/hex>\\n  <hex>#5F5647<\/hex ... #> [15] <palette name=\"Darjeeling2\">\\n  <hex>#ECCBAE<\/hex>\\n  <hex>#046C9A<\/hex> ..."},{"path":"https://jennybc.github.io/repurrrsive/news/index.html","id":"repurrrsive-development-version","dir":"Changelog","previous_headings":"","what":"repurrrsive (development version)","title":"repurrrsive (development version)","text":"NSFW content removed got_chars (#26). gmaps_cities new dataset, containing results geocoding five US cities.","code":""},{"path":"https://jennybc.github.io/repurrrsive/news/index.html","id":"repurrrsive-100","dir":"Changelog","previous_headings":"","what":"repurrrsive 1.0.0","title":"repurrrsive 1.0.0","text":"CRAN release: 2019-07-15 discog new dataset, containing Sharla Gelfand’s discography, inspired https://sharla.party/post/discog-purrr/ used new tidyr vignette rectangling.","code":""},{"path":"https://jennybc.github.io/repurrrsive/news/index.html","id":"repurrrsive-010","dir":"Changelog","previous_headings":"","what":"repurrrsive 0.1.0","title":"repurrrsive 0.1.0","text":"CRAN release: 2017-09-08 Initial CRAN release","code":""}]
